cmake_minimum_required(VERSION 3.4...3.18)
set(CMAKE_CXX_STANDARD 17)

message("cmake install prefix ${CMAKE_INSTALL_PREFIX}")
message("cmake module path ${CMAKE_MODULE_PATH}")
message("cmake current source dir ${CMAKE_CURRENT_SOURCE_DIR}/cmake_aux/Modules/")
message("FOOBAZ ${CMAKE_SYSTEM_LIBRARY_PATH}")

add_subdirectory(extern/armadillo-code)
add_subdirectory(extern/pybind11)

project(coaldecoder)

#set(BLA_VENDER OpenBLAS)
#find_package(BLAS REQUIRED)
#
# hacky way to find BLAS
#find_package(Python3)
#execute_process(
#  COMMAND "${Python3_EXECUTABLE}" -c "import numpy; print(numpy.show_config()['blas_info']['libraries'])"
#  OUTPUT_VARIABLE NUMPY_BLAS_LIBRARIES
#  OUTPUT_STRIP_TRAILING_WHITESPACE
#)
#execute_process(
#  COMMAND "${Python3_EXECUTABLE}" -c "import numpy; print(numpy.show_config()['lapack_info']['libraries'])"
#  OUTPUT_VARIABLE NUMPY_LAPACK_LIBRARIES
#  OUTPUT_STRIP_TRAILING_WHITESPACE
#)
#find_package(BLAS REQUIRED)
#find_package(LAPACK REQUIRED)

#pybind11_add_module(arma_converter_test src/coalescent_model.cpp)
#target_include_directories(arma_converter_test PRIVATE extern/armadillo-code/include)

pybind11_add_module(coaldecoder src/coalescent_model.cpp)
target_include_directories(coaldecoder PRIVATE extern/armadillo-code/include)
target_link_libraries(armadillo PUBLIC ${NUMPY_BLAS_LIBARIES}) # ${NUMPY_LAPACK_LIBRARIES})
target_link_libraries(coaldecoder PUBLIC armadillo)
#target_link_libraries(coaldecoder PUBLIC ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES})

# EXAMPLE_VERSION_INFO is defined by setup.py and passed into the C++ code as a
# define (VERSION_INFO) here.
#target_compile_definitions(cmake_example PRIVATE VERSION_INFO=${EXAMPLE_VERSION_INFO})
